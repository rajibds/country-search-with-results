{"version":3,"sources":["context/CountryContext.jsx","components/CountrySearch.jsx","components/CountrySearchResults.jsx","components/CountryDetails.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["CountryContext","createContext","CountryProvider","children","useState","countries","setCountries","countryDetails","setCountryDetails","Provider","value","searchCountriesByCapital","capital","axios","get","then","response","data","catch","error","fetchCountryDetails","country","CountySearch","useContext","debouncedSearch","useRef","debounce","inputParam","current","className","type","id","placeholder","onChange","event","target","handleCountrySearch","CountrySearchResults","name","selectedCountry","setSelectedCountry","useEffect","handleChange","map","CountryDetails","src","flag","alt","Intl","NumberFormat","format","population","languages","language","join","App","CountrySearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7380529e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nexport const CountryContext = createContext();\n\nconst CountryProvider = ({ children }) => {\n  const [countries, setCountries] = useState([]);\n  const [countryDetails, setCountryDetails] = useState([]);\n\n  const searchCountriesByCapital = capital => {\n    axios\n      .get(`https://restcountries.eu/rest/v2/capital/${capital}`)\n      .then(response => {\n        // handle success\n        setCountries(response.data);\n      })\n      .catch(error => {\n        // handle error\n      });\n  };\n\n  const fetchCountryDetails = country => {\n    axios\n      .get(`https://restcountries.eu/rest/v2/name/${country}`)\n      .then(response => {\n        // handle success\n        setCountryDetails(response.data);\n      })\n      .catch(error => {\n        // handle error\n      });\n  };\n\n  return (\n    <CountryContext.Provider\n      value={{\n        countries,\n        countryDetails,\n        searchCountriesByCapital,\n        fetchCountryDetails,\n      }}\n    >\n      {children}\n    </CountryContext.Provider>\n  );\n};\n\nexport default CountryProvider;\n","import React, { useContext, useRef } from 'react';\nimport { debounce } from 'throttle-debounce';\n\nimport { CountryContext } from '../context/CountryContext';\n\nconst CountySearch = () => {\n  const { searchCountriesByCapital } = useContext(CountryContext);\n\n  const debouncedSearch = useRef(\n    debounce(1000, inputParam => {\n      searchCountriesByCapital(inputParam);\n    }),\n  ).current;\n\n  const handleCountrySearch = event => {\n    debouncedSearch(event.target.value);\n  };\n  return (\n    <div className=\"country-search\">\n      <div className=\"country-search__header\">Search With Capital</div>\n      <div className=\"country-search__input\">\n        <input\n          type=\"text\"\n          id=\"capital\"\n          placeholder=\"Capital\"\n          onChange={event => handleCountrySearch(event)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CountySearch;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { CountryContext } from '../context/CountryContext';\n\nconst CountrySearchResults = () => {\n  const { countries, fetchCountryDetails } = useContext(CountryContext);\n  const [selectedCountry, setSelectedCountry] = useState(countries[0]?.name);\n\n  useEffect(() => {\n    setSelectedCountry(countries[0]?.name);\n  }, [countries]);\n\n  useEffect(() => {\n    if (selectedCountry) {\n      fetchCountryDetails(selectedCountry);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCountry]);\n\n  const handleChange = event => {\n    setSelectedCountry(event.target.value);\n  };\n\n  return (\n    <div className=\"country-search-results\">\n      <div className=\"country-search-results__header\">Results</div>\n      <div className=\"country-search-results__select\">\n        <select value={selectedCountry} onChange={event => handleChange(event)}>\n          {countries.map(country => (\n            <option key={country.name} value={country.name}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default CountrySearchResults;\n","import React, { useContext } from 'react';\nimport { CountryContext } from '../context/CountryContext';\n\nconst CountryDetails = () => {\n  const { countryDetails } = useContext(CountryContext);\n\n  return (\n    <div className=\"country-details\">\n      <div className=\"country-details__header\">Country Details</div>\n      {countryDetails.map(country => (\n        <div className=\"country-details__body\" key={country.name}>\n          <div className=\"country-details__body-left\">\n            <div className=\"country-details__body-left__flag\">\n              <img src={country.flag} alt=\"\" />\n            </div>\n          </div>\n\n          <div className=\"country-details__body-right\">\n            <div className=\"country-details-country-name\">Country Name: {country.name}</div>\n            <div className=\"country-details-population\">\n              Population: {new Intl.NumberFormat().format(country.population)}\n            </div>\n            <div className=\"country-details-capital\">Capital: {country.capital}</div>\n            <div className=\"country-details-languages\">\n              Languages: {country.languages.map(language => language.name).join(', ')}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CountryDetails;\n","import CountryProvider from '../context/CountryContext';\nimport CountrySearch from './CountrySearch';\nimport CountrySearchResults from './CountrySearchResults';\nimport CountryDetails from './CountryDetails';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <CountryProvider>\n        <CountrySearch />\n        <CountrySearchResults />\n        <CountryDetails />\n      </CountryProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}